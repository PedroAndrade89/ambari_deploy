- hosts: db-host
#  become: yes
#  become_method: sudo
  tasks:

    - name: Install postgresql
      package:
        name: postgresql
        state: latest

    - name: Install python-psycopg2
      package:
        name: python-psycopg2
        state: latest

    - name: change postgres network binding
      lineinfile:
        path: /var/lib/pgsql/data/postgresql.conf
        regexp: "listen_addresses = 'localhost'"
        line: "listen_addresses = '*'"

 #   - name: init db psql
 #     command: service postgresql initdb

    - name: Copy a new pg_hba.conf to remote
      copy:
        src: conf_files/pg_hba.conf.orig
        dest: /var/lib/pgsql/data/pg_hba.conf
        owner: postgres
        group: postgres
        mode: 0600
        backup: yes

    - name: start postgresql-server
      systemd:
        name: postgresql
        state: restarted

    - name: Ansible copy file to remote server
      copy:
        src: conf_files/Ambari-DDL-Postgres-CREATE.sql
        owner: root
        dest: /tmp 

- hosts: db-host
  become: yes
  become_user: postgres
  become_method: sudo
  tasks:


    # Create a new database 
    - postgresql_db:
        name: '{{db_name}}'

    # Create user 
    - postgresql_user:
        name: '{{db_username}}'
        password: '{{db_password}}'

    - postgresql_privs:
        db: postgres
        privs: ALL
        type: database
        obj: '{{db_name}}'
        role: '{{db_username}}'

    - name: psql create schema
      command: psql -c "CREATE SCHEMA {{db_name}} AUTHORIZATION {{db_username}};"

    - name: psql alter schema
      command: psql -c "ALTER SCHEMA {{db_name}} OWNER TO {{db_username}};"

    - name: psql alter role
      command: psql -c "ALTER ROLE {{db_username}} SET search_path to '{{db_name}}', 'public';"

    - name: load schema
      shell: psql "dbname=ambari  user=ambari password=bigdata" < /tmp/Ambari-DDL-Postgres-CREATE.sql



      
   
      
    
    
        


